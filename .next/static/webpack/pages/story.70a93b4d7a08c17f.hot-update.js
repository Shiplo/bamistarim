/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/story",{

/***/ "./node_modules/gsap/dist/Flip.js":
/*!****************************************!*\
  !*** ./node_modules/gsap/dist/Flip.js ***!
  \****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("(function (global, factory) {\n\t true ? factory(exports) :\n\t0;\n}(this, (function (exports) { 'use strict';\n\n\tvar _doc,\n\t    _win,\n\t    _docElement,\n\t    _body,\n\t    _divContainer,\n\t    _svgContainer,\n\t    _identityMatrix,\n\t    _gEl,\n\t    _transformProp = \"transform\",\n\t    _transformOriginProp = _transformProp + \"Origin\",\n\t    _hasOffsetBug,\n\t    _setDoc = function _setDoc(element) {\n\t  var doc = element.ownerDocument || element;\n\n\t  if (!(_transformProp in element.style) && \"msTransform\" in element.style) {\n\t    _transformProp = \"msTransform\";\n\t    _transformOriginProp = _transformProp + \"Origin\";\n\t  }\n\n\t  while (doc.parentNode && (doc = doc.parentNode)) {}\n\n\t  _win = window;\n\t  _identityMatrix = new Matrix2D();\n\n\t  if (doc) {\n\t    _doc = doc;\n\t    _docElement = doc.documentElement;\n\t    _body = doc.body;\n\t    _gEl = _doc.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\t    _gEl.style.transform = \"none\";\n\t    var d1 = doc.createElement(\"div\"),\n\t        d2 = doc.createElement(\"div\");\n\n\t    _body.appendChild(d1);\n\n\t    d1.appendChild(d2);\n\t    d1.style.position = \"static\";\n\t    d1.style[_transformProp] = \"translate3d(0,0,1px)\";\n\t    _hasOffsetBug = d2.offsetParent !== d1;\n\n\t    _body.removeChild(d1);\n\t  }\n\n\t  return doc;\n\t},\n\t    _forceNonZeroScale = function _forceNonZeroScale(e) {\n\t  var a, cache;\n\n\t  while (e && e !== _body) {\n\t    cache = e._gsap;\n\t    cache && cache.uncache && cache.get(e, \"x\");\n\n\t    if (cache && !cache.scaleX && !cache.scaleY && cache.renderTransform) {\n\t      cache.scaleX = cache.scaleY = 1e-4;\n\t      cache.renderTransform(1, cache);\n\t      a ? a.push(cache) : a = [cache];\n\t    }\n\n\t    e = e.parentNode;\n\t  }\n\n\t  return a;\n\t},\n\t    _svgTemps = [],\n\t    _divTemps = [],\n\t    _getDocScrollTop = function _getDocScrollTop() {\n\t  return _win.pageYOffset || _doc.scrollTop || _docElement.scrollTop || _body.scrollTop || 0;\n\t},\n\t    _getDocScrollLeft = function _getDocScrollLeft() {\n\t  return _win.pageXOffset || _doc.scrollLeft || _docElement.scrollLeft || _body.scrollLeft || 0;\n\t},\n\t    _svgOwner = function _svgOwner(element) {\n\t  return element.ownerSVGElement || ((element.tagName + \"\").toLowerCase() === \"svg\" ? element : null);\n\t},\n\t    _isFixed = function _isFixed(element) {\n\t  if (_win.getComputedStyle(element).position === \"fixed\") {\n\t    return true;\n\t  }\n\n\t  element = element.parentNode;\n\n\t  if (element && element.nodeType === 1) {\n\t    return _isFixed(element);\n\t  }\n\t},\n\t    _createSibling = function _createSibling(element, i) {\n\t  if (element.parentNode && (_doc || _setDoc(element))) {\n\t    var svg = _svgOwner(element),\n\t        ns = svg ? svg.getAttribute(\"xmlns\") || \"http://www.w3.org/2000/svg\" : \"http://www.w3.org/1999/xhtml\",\n\t        type = svg ? i ? \"rect\" : \"g\" : \"div\",\n\t        x = i !== 2 ? 0 : 100,\n\t        y = i === 3 ? 100 : 0,\n\t        css = \"position:absolute;display:block;pointer-events:none;margin:0;padding:0;\",\n\t        e = _doc.createElementNS ? _doc.createElementNS(ns.replace(/^https/, \"http\"), type) : _doc.createElement(type);\n\n\t    if (i) {\n\t      if (!svg) {\n\t        if (!_divContainer) {\n\t          _divContainer = _createSibling(element);\n\t          _divContainer.style.cssText = css;\n\t        }\n\n\t        e.style.cssText = css + \"width:0.1px;height:0.1px;top:\" + y + \"px;left:\" + x + \"px\";\n\n\t        _divContainer.appendChild(e);\n\t      } else {\n\t        _svgContainer || (_svgContainer = _createSibling(element));\n\t        e.setAttribute(\"width\", 0.01);\n\t        e.setAttribute(\"height\", 0.01);\n\t        e.setAttribute(\"transform\", \"translate(\" + x + \",\" + y + \")\");\n\n\t        _svgContainer.appendChild(e);\n\t      }\n\t    }\n\n\t    return e;\n\t  }\n\n\t  throw \"Need document and parent.\";\n\t},\n\t    _consolidate = function _consolidate(m) {\n\t  var c = new Matrix2D(),\n\t      i = 0;\n\n\t  for (; i < m.numberOfItems; i++) {\n\t    c.multiply(m.getItem(i).matrix);\n\t  }\n\n\t  return c;\n\t},\n\t    _getCTM = function _getCTM(svg) {\n\t  var m = svg.getCTM(),\n\t      transform;\n\n\t  if (!m) {\n\t    transform = svg.style[_transformProp];\n\t    svg.style[_transformProp] = \"none\";\n\t    svg.appendChild(_gEl);\n\t    m = _gEl.getCTM();\n\t    svg.removeChild(_gEl);\n\t    transform ? svg.style[_transformProp] = transform : svg.style.removeProperty(_transformProp.replace(/([A-Z])/g, \"-$1\").toLowerCase());\n\t  }\n\n\t  return m || _identityMatrix.clone();\n\t},\n\t    _placeSiblings = function _placeSiblings(element, adjustGOffset) {\n\t  var svg = _svgOwner(element),\n\t      isRootSVG = element === svg,\n\t      siblings = svg ? _svgTemps : _divTemps,\n\t      parent = element.parentNode,\n\t      container,\n\t      m,\n\t      b,\n\t      x,\n\t      y,\n\t      cs;\n\n\t  if (element === _win) {\n\t    return element;\n\t  }\n\n\t  siblings.length || siblings.push(_createSibling(element, 1), _createSibling(element, 2), _createSibling(element, 3));\n\t  container = svg ? _svgContainer : _divContainer;\n\n\t  if (svg) {\n\t    if (isRootSVG) {\n\t      b = _getCTM(element);\n\t      x = -b.e / b.a;\n\t      y = -b.f / b.d;\n\t      m = _identityMatrix;\n\t    } else if (element.getBBox) {\n\t      b = element.getBBox();\n\t      m = element.transform ? element.transform.baseVal : {};\n\t      m = !m.numberOfItems ? _identityMatrix : m.numberOfItems > 1 ? _consolidate(m) : m.getItem(0).matrix;\n\t      x = m.a * b.x + m.c * b.y;\n\t      y = m.b * b.x + m.d * b.y;\n\t    } else {\n\t      m = new Matrix2D();\n\t      x = y = 0;\n\t    }\n\n\t    if (adjustGOffset && element.tagName.toLowerCase() === \"g\") {\n\t      x = y = 0;\n\t    }\n\n\t    (isRootSVG ? svg : parent).appendChild(container);\n\t    container.setAttribute(\"transform\", \"matrix(\" + m.a + \",\" + m.b + \",\" + m.c + \",\" + m.d + \",\" + (m.e + x) + \",\" + (m.f + y) + \")\");\n\t  } else {\n\t    x = y = 0;\n\n\t    if (_hasOffsetBug) {\n\t      m = element.offsetParent;\n\t      b = element;\n\n\t      while (b && (b = b.parentNode) && b !== m && b.parentNode) {\n\t        if ((_win.getComputedStyle(b)[_transformProp] + \"\").length > 4) {\n\t          x = b.offsetLeft;\n\t          y = b.offsetTop;\n\t          b = 0;\n\t        }\n\t      }\n\t    }\n\n\t    cs = _win.getComputedStyle(element);\n\n\t    if (cs.position !== \"absolute\" && cs.position !== \"fixed\") {\n\t      m = element.offsetParent;\n\n\t      while (parent && parent !== m) {\n\t        x += parent.scrollLeft || 0;\n\t        y += parent.scrollTop || 0;\n\t        parent = parent.parentNode;\n\t      }\n\t    }\n\n\t    b = container.style;\n\t    b.top = element.offsetTop - y + \"px\";\n\t    b.left = element.offsetLeft - x + \"px\";\n\t    b[_transformProp] = cs[_transformProp];\n\t    b[_transformOriginProp] = cs[_transformOriginProp];\n\t    b.position = cs.position === \"fixed\" ? \"fixed\" : \"absolute\";\n\t    element.parentNode.appendChild(container);\n\t  }\n\n\t  return container;\n\t},\n\t    _setMatrix = function _setMatrix(m, a, b, c, d, e, f) {\n\t  m.a = a;\n\t  m.b = b;\n\t  m.c = c;\n\t  m.d = d;\n\t  m.e = e;\n\t  m.f = f;\n\t  return m;\n\t};\n\n\tvar Matrix2D = function () {\n\t  function Matrix2D(a, b, c, d, e, f) {\n\t    if (a === void 0) {\n\t      a = 1;\n\t    }\n\n\t    if (b === void 0) {\n\t      b = 0;\n\t    }\n\n\t    if (c === void 0) {\n\t      c = 0;\n\t    }\n\n\t    if (d === void 0) {\n\t      d = 1;\n\t    }\n\n\t    if (e === void 0) {\n\t      e = 0;\n\t    }\n\n\t    if (f === void 0) {\n\t      f = 0;\n\t    }\n\n\t    _setMatrix(this, a, b, c, d, e, f);\n\t  }\n\n\t  var _proto = Matrix2D.prototype;\n\n\t  _proto.inverse = function inverse() {\n\t    var a = this.a,\n\t        b = this.b,\n\t        c = this.c,\n\t        d = this.d,\n\t        e = this.e,\n\t        f = this.f,\n\t        determinant = a * d - b * c || 1e-10;\n\t    return _setMatrix(this, d / determinant, -b / determinant, -c / determinant, a / determinant, (c * f - d * e) / determinant, -(a * f - b * e) / determinant);\n\t  };\n\n\t  _proto.multiply = function multiply(matrix) {\n\t    var a = this.a,\n\t        b = this.b,\n\t        c = this.c,\n\t        d = this.d,\n\t        e = this.e,\n\t        f = this.f,\n\t        a2 = matrix.a,\n\t        b2 = matrix.c,\n\t        c2 = matrix.b,\n\t        d2 = matrix.d,\n\t        e2 = matrix.e,\n\t        f2 = matrix.f;\n\t    return _setMatrix(this, a2 * a + c2 * c, a2 * b + c2 * d, b2 * a + d2 * c, b2 * b + d2 * d, e + e2 * a + f2 * c, f + e2 * b + f2 * d);\n\t  };\n\n\t  _proto.clone = function clone() {\n\t    return new Matrix2D(this.a, this.b, this.c, this.d, this.e, this.f);\n\t  };\n\n\t  _proto.equals = function equals(matrix) {\n\t    var a = this.a,\n\t        b = this.b,\n\t        c = this.c,\n\t        d = this.d,\n\t        e = this.e,\n\t        f = this.f;\n\t    return a === matrix.a && b === matrix.b && c === matrix.c && d === matrix.d && e === matrix.e && f === matrix.f;\n\t  };\n\n\t  _proto.apply = function apply(point, decoratee) {\n\t    if (decoratee === void 0) {\n\t      decoratee = {};\n\t    }\n\n\t    var x = point.x,\n\t        y = point.y,\n\t        a = this.a,\n\t        b = this.b,\n\t        c = this.c,\n\t        d = this.d,\n\t        e = this.e,\n\t        f = this.f;\n\t    decoratee.x = x * a + y * c + e || 0;\n\t    decoratee.y = x * b + y * d + f || 0;\n\t    return decoratee;\n\t  };\n\n\t  return Matrix2D;\n\t}();\n\tfunction getGlobalMatrix(element, inverse, adjustGOffset, includeScrollInFixed) {\n\t  if (!element || !element.parentNode || (_doc || _setDoc(element)).documentElement === element) {\n\t    return new Matrix2D();\n\t  }\n\n\t  var zeroScales = _forceNonZeroScale(element),\n\t      svg = _svgOwner(element),\n\t      temps = svg ? _svgTemps : _divTemps,\n\t      container = _placeSiblings(element, adjustGOffset),\n\t      b1 = temps[0].getBoundingClientRect(),\n\t      b2 = temps[1].getBoundingClientRect(),\n\t      b3 = temps[2].getBoundingClientRect(),\n\t      parent = container.parentNode,\n\t      isFixed = !includeScrollInFixed && _isFixed(element),\n\t      m = new Matrix2D((b2.left - b1.left) / 100, (b2.top - b1.top) / 100, (b3.left - b1.left) / 100, (b3.top - b1.top) / 100, b1.left + (isFixed ? 0 : _getDocScrollLeft()), b1.top + (isFixed ? 0 : _getDocScrollTop()));\n\n\t  parent.removeChild(container);\n\n\t  if (zeroScales) {\n\t    b1 = zeroScales.length;\n\n\t    while (b1--) {\n\t      b2 = zeroScales[b1];\n\t      b2.scaleX = b2.scaleY = 0;\n\t      b2.renderTransform(1, b2);\n\t    }\n\t  }\n\n\t  return inverse ? m.inverse() : m;\n\t}\n\n\t/*!\n\t * Flip 3.11.3\n\t * https://greensock.com\n\t *\n\t * @license Copyright 2008-2022, GreenSock. All rights reserved.\n\t * Subject to the terms at https://greensock.com/standard-license or for\n\t * Club GreenSock members, the agreement issued with that membership.\n\t * @author: Jack Doyle, jack@greensock.com\n\t*/\n\n\tvar _id = 1,\n\t    _toArray,\n\t    gsap,\n\t    _batch,\n\t    _batchAction,\n\t    _body$1,\n\t    _closestTenth,\n\t    _forEachBatch = function _forEachBatch(batch, name) {\n\t  return batch.actions.forEach(function (a) {\n\t    return a.vars[name] && a.vars[name](a);\n\t  });\n\t},\n\t    _batchLookup = {},\n\t    _RAD2DEG = 180 / Math.PI,\n\t    _DEG2RAD = Math.PI / 180,\n\t    _emptyObj = {},\n\t    _dashedNameLookup = {},\n\t    _memoizedRemoveProps = {},\n\t    _listToArray = function _listToArray(list) {\n\t  return typeof list === \"string\" ? list.split(\" \").join(\"\").split(\",\") : list;\n\t},\n\t    _callbacks = _listToArray(\"onStart,onUpdate,onComplete,onReverseComplete,onInterrupt\"),\n\t    _removeProps = _listToArray(\"transform,transformOrigin,width,height,position,top,left,opacity,zIndex,maxWidth,maxHeight,minWidth,minHeight\"),\n\t    _getEl = function _getEl(target) {\n\t  return _toArray(target)[0] || console.warn(\"Element not found:\", target);\n\t},\n\t    _round = function _round(value) {\n\t  return Math.round(value * 10000) / 10000 || 0;\n\t},\n\t    _toggleClass = function _toggleClass(targets, className, action) {\n\t  return targets.forEach(function (el) {\n\t    return el.classList[action](className);\n\t  });\n\t},\n\t    _reserved = {\n\t  zIndex: 1,\n\t  kill: 1,\n\t  simple: 1,\n\t  spin: 1,\n\t  clearProps: 1,\n\t  targets: 1,\n\t  toggleClass: 1,\n\t  onComplete: 1,\n\t  onUpdate: 1,\n\t  onInterrupt: 1,\n\t  onStart: 1,\n\t  delay: 1,\n\t  repeat: 1,\n\t  repeatDelay: 1,\n\t  yoyo: 1,\n\t  scale: 1,\n\t  fade: 1,\n\t  absolute: 1,\n\t  props: 1,\n\t  onEnter: 1,\n\t  onLeave: 1,\n\t  custom: 1,\n\t  paused: 1,\n\t  nested: 1,\n\t  prune: 1,\n\t  absoluteOnLeave: 1\n\t},\n\t    _fitReserved = {\n\t  zIndex: 1,\n\t  simple: 1,\n\t  clearProps: 1,\n\t  scale: 1,\n\t  absolute: 1,\n\t  fitChild: 1,\n\t  getVars: 1,\n\t  props: 1\n\t},\n\t    _camelToDashed = function _camelToDashed(p) {\n\t  return p.replace(/([A-Z])/g, \"-$1\").toLowerCase();\n\t},\n\t    _copy = function _copy(obj, exclude) {\n\t  var result = {},\n\t      p;\n\n\t  for (p in obj) {\n\t    exclude[p] || (result[p] = obj[p]);\n\t  }\n\n\t  return result;\n\t},\n\t    _memoizedProps = {},\n\t    _memoizeProps = function _memoizeProps(props) {\n\t  var p = _memoizedProps[props] = _listToArray(props);\n\n\t  _memoizedRemoveProps[props] = p.concat(_removeProps);\n\t  return p;\n\t},\n\t    _getInverseGlobalMatrix = function _getInverseGlobalMatrix(el) {\n\t  var cache = el._gsap || gsap.core.getCache(el);\n\n\t  if (cache.gmCache === gsap.ticker.frame) {\n\t    return cache.gMatrix;\n\t  }\n\n\t  cache.gmCache = gsap.ticker.frame;\n\t  return cache.gMatrix = getGlobalMatrix(el, true, false, true);\n\t},\n\t    _getDOMDepth = function _getDOMDepth(el, invert, level) {\n\t  if (level === void 0) {\n\t    level = 0;\n\t  }\n\n\t  var parent = el.parentNode,\n\t      inc = 1000 * Math.pow(10, level) * (invert ? -1 : 1),\n\t      l = invert ? -inc * 900 : 0;\n\n\t  while (el) {\n\t    l += inc;\n\t    el = el.previousSibling;\n\t  }\n\n\t  return parent ? l + _getDOMDepth(parent, invert, level + 1) : l;\n\t},\n\t    _orderByDOMDepth = function _orderByDOMDepth(comps, invert, isElStates) {\n\t  comps.forEach(function (comp) {\n\t    return comp.d = _getDOMDepth(isElStates ? comp.element : comp.t, invert);\n\t  });\n\t  comps.sort(function (c1, c2) {\n\t    return c1.d - c2.d;\n\t  });\n\t  return comps;\n\t},\n\t    _recordInlineStyles = function _recordInlineStyles(elState, props) {\n\t  var style = elState.element.style,\n\t      a = elState.css = elState.css || [],\n\t      i = props.length,\n\t      p,\n\t      v;\n\n\t  while (i--) {\n\t    p = props[i];\n\t    v = style[p] || style.getPropertyValue(p);\n\t    a.push(v ? p : _dashedNameLookup[p] || (_dashedNameLookup[p] = _camelToDashed(p)), v);\n\t  }\n\n\t  return style;\n\t},\n\t    _applyInlineStyles = function _applyInlineStyles(state) {\n\t  var css = state.css,\n\t      style = state.element.style,\n\t      i = 0;\n\t  state.cache.uncache = 1;\n\n\t  for (; i < css.length; i += 2) {\n\t    css[i + 1] ? style[css[i]] = css[i + 1] : style.removeProperty(css[i]);\n\t  }\n\t},\n\t    _setFinalStates = function _setFinalStates(comps, onlyTransforms) {\n\t  comps.forEach(function (c) {\n\t    return c.a.cache.uncache = 1;\n\t  });\n\t  onlyTransforms || comps.finalStates.forEach(_applyInlineStyles);\n\t},\n\t    _absoluteProps = \"paddingTop,paddingRight,paddingBottom,paddingLeft,gridArea,transition\".split(\",\"),\n\t    _makeAbsolute = function _makeAbsolute(elState, fallbackNode, ignoreBatch) {\n\t  var element = elState.element,\n\t      width = elState.width,\n\t      height = elState.height,\n\t      uncache = elState.uncache,\n\t      getProp = elState.getProp,\n\t      style = element.style,\n\t      i = 4,\n\t      result,\n\t      displayIsNone,\n\t      cs;\n\t  typeof fallbackNode !== \"object\" && (fallbackNode = elState);\n\n\t  if (_batch && ignoreBatch !== 1) {\n\t    _batch._abs.push({\n\t      t: element,\n\t      b: elState,\n\t      a: elState,\n\t      sd: 0\n\t    });\n\n\t    _batch._final.push(function () {\n\t      return (elState.cache.uncache = 1) && _applyInlineStyles(elState);\n\t    });\n\n\t    return element;\n\t  }\n\n\t  displayIsNone = getProp(\"display\") === \"none\";\n\n\t  if (!elState.isVisible || displayIsNone) {\n\t    displayIsNone && (_recordInlineStyles(elState, [\"display\"]).display = fallbackNode.display);\n\t    elState.matrix = fallbackNode.matrix;\n\t    elState.width = width = elState.width || fallbackNode.width;\n\t    elState.height = height = elState.height || fallbackNode.height;\n\t  }\n\n\t  _recordInlineStyles(elState, _absoluteProps);\n\n\t  cs = window.getComputedStyle(element);\n\n\t  while (i--) {\n\t    style[_absoluteProps[i]] = cs[_absoluteProps[i]];\n\t  }\n\n\t  style.gridArea = \"1 / 1 / 1 / 1\";\n\t  style.transition = \"none\";\n\t  style.position = \"absolute\";\n\t  style.width = width + \"px\";\n\t  style.height = height + \"px\";\n\t  style.top || (style.top = \"0px\");\n\t  style.left || (style.left = \"0px\");\n\n\t  if (uncache) {\n\t    result = new ElementState(element);\n\t  } else {\n\t    result = _copy(elState, _emptyObj);\n\t    result.position = \"absolute\";\n\n\t    if (elState.simple) {\n\t      var bounds = element.getBoundingClientRect();\n\t      result.matrix = new Matrix2D(1, 0, 0, 1, bounds.left + _getDocScrollLeft(), bounds.top + _getDocScrollTop());\n\t    } else {\n\t      result.matrix = getGlobalMatrix(element, false, false, true);\n\t    }\n\t  }\n\n\t  result = _fit(result, elState, true);\n\t  elState.x = _closestTenth(result.x, 0.01);\n\t  elState.y = _closestTenth(result.y, 0.01);\n\t  return element;\n\t},\n\t    _filterComps = function _filterComps(comps, targets) {\n\t  if (targets !== true) {\n\t    targets = _toArray(targets);\n\t    comps = comps.filter(function (c) {\n\t      if (targets.indexOf((c.sd < 0 ? c.b : c.a).element) !== -1) {\n\t        return true;\n\t      } else {\n\t        c.t._gsap.renderTransform(1);\n\n\t        if (c.b.isVisible) {\n\t          c.t.style.width = c.b.width + \"px\";\n\t          c.t.style.height = c.b.height + \"px\";\n\t        }\n\t      }\n\t    });\n\t  }\n\n\t  return comps;\n\t},\n\t    _makeCompsAbsolute = function _makeCompsAbsolute(comps) {\n\t  return _orderByDOMDepth(comps, true).forEach(function (c) {\n\t    return (c.a.isVisible || c.b.isVisible) && _makeAbsolute(c.sd < 0 ? c.b : c.a, c.b, 1);\n\t  });\n\t},\n\t    _findElStateInState = function _findElStateInState(state, other) {\n\t  return other && state.idLookup[_parseElementState(other).id] || state.elementStates[0];\n\t},\n\t    _parseElementState = function _parseElementState(elOrNode, props, simple, other) {\n\t  return elOrNode instanceof ElementState ? elOrNode : elOrNode instanceof FlipState ? _findElStateInState(elOrNode, other) : new ElementState(typeof elOrNode === \"string\" ? _getEl(elOrNode) || console.warn(elOrNode + \" not found\") : elOrNode, props, simple);\n\t},\n\t    _recordProps = function _recordProps(elState, props) {\n\t  var getProp = gsap.getProperty(elState.element, null, \"native\"),\n\t      obj = elState.props = {},\n\t      i = props.length;\n\n\t  while (i--) {\n\t    obj[props[i]] = (getProp(props[i]) + \"\").trim();\n\t  }\n\n\t  obj.zIndex && (obj.zIndex = parseFloat(obj.zIndex) || 0);\n\t  return elState;\n\t},\n\t    _applyProps = function _applyProps(element, props) {\n\t  var style = element.style || element,\n\t      p;\n\n\t  for (p in props) {\n\t    style[p] = props[p];\n\t  }\n\t},\n\t    _getID = function _getID(el) {\n\t  var id = el.getAttribute(\"data-flip-id\");\n\t  id || el.setAttribute(\"data-flip-id\", id = \"auto-\" + _id++);\n\t  return id;\n\t},\n\t    _elementsFromElementStates = function _elementsFromElementStates(elStates) {\n\t  return elStates.map(function (elState) {\n\t    return elState.element;\n\t  });\n\t},\n\t    _handleCallback = function _handleCallback(callback, elStates, tl) {\n\t  return callback && elStates.length && tl.add(callback(_elementsFromElementStates(elStates), tl, new FlipState(elStates, 0, true)), 0);\n\t},\n\t    _fit = function _fit(fromState, toState, scale, applyProps, fitChild, vars) {\n\t  var element = fromState.element,\n\t      cache = fromState.cache,\n\t      parent = fromState.parent,\n\t      x = fromState.x,\n\t      y = fromState.y,\n\t      width = toState.width,\n\t      height = toState.height,\n\t      scaleX = toState.scaleX,\n\t      scaleY = toState.scaleY,\n\t      rotation = toState.rotation,\n\t      bounds = toState.bounds,\n\t      cssText = vars && element.style.cssText,\n\t      transform = vars && element.getBBox && element.getAttribute(\"transform\"),\n\t      dimensionState = fromState,\n\t      _toState$matrix = toState.matrix,\n\t      e = _toState$matrix.e,\n\t      f = _toState$matrix.f,\n\t      deep = fromState.bounds.width !== bounds.width || fromState.bounds.height !== bounds.height || fromState.scaleX !== scaleX || fromState.scaleY !== scaleY || fromState.rotation !== rotation,\n\t      simple = !deep && fromState.simple && toState.simple && !fitChild,\n\t      skewX,\n\t      fromPoint,\n\t      toPoint,\n\t      getProp,\n\t      parentMatrix,\n\t      matrix,\n\t      bbox;\n\n\t  if (simple || !parent) {\n\t    scaleX = scaleY = 1;\n\t    rotation = skewX = 0;\n\t  } else {\n\t    parentMatrix = _getInverseGlobalMatrix(parent);\n\t    matrix = parentMatrix.clone().multiply(toState.ctm ? toState.matrix.clone().multiply(toState.ctm) : toState.matrix);\n\t    rotation = _round(Math.atan2(matrix.b, matrix.a) * _RAD2DEG);\n\t    skewX = _round(Math.atan2(matrix.c, matrix.d) * _RAD2DEG + rotation) % 360;\n\t    scaleX = Math.sqrt(Math.pow(matrix.a, 2) + Math.pow(matrix.b, 2));\n\t    scaleY = Math.sqrt(Math.pow(matrix.c, 2) + Math.pow(matrix.d, 2)) * Math.cos(skewX * _DEG2RAD);\n\n\t    if (fitChild) {\n\t      fitChild = _toArray(fitChild)[0];\n\t      getProp = gsap.getProperty(fitChild);\n\t      bbox = fitChild.getBBox && typeof fitChild.getBBox === \"function\" && fitChild.getBBox();\n\t      dimensionState = {\n\t        scaleX: getProp(\"scaleX\"),\n\t        scaleY: getProp(\"scaleY\"),\n\t        width: bbox ? bbox.width : Math.ceil(parseFloat(getProp(\"width\", \"px\"))),\n\t        height: bbox ? bbox.height : parseFloat(getProp(\"height\", \"px\"))\n\t      };\n\t    }\n\n\t    cache.rotation = rotation + \"deg\";\n\t    cache.skewX = skewX + \"deg\";\n\t  }\n\n\t  if (scale) {\n\t    scaleX *= width === dimensionState.width || !dimensionState.width ? 1 : width / dimensionState.width;\n\t    scaleY *= height === dimensionState.height || !dimensionState.height ? 1 : height / dimensionState.height;\n\t    cache.scaleX = scaleX;\n\t    cache.scaleY = scaleY;\n\t  } else {\n\t    width = _closestTenth(width * scaleX / dimensionState.scaleX, 0);\n\t    height = _closestTenth(height * scaleY / dimensionState.scaleY, 0);\n\t    element.style.width = width + \"px\";\n\t    element.style.height = height + \"px\";\n\t  }\n\n\t  applyProps && _applyProps(element, toState.props);\n\n\t  if (simple || !parent) {\n\t    x += e - fromState.matrix.e;\n\t    y += f - fromState.matrix.f;\n\t  } else if (deep || parent !== toState.parent) {\n\t    cache.renderTransform(1, cache);\n\t    matrix = getGlobalMatrix(fitChild || element, false, false, true);\n\t    fromPoint = parentMatrix.apply({\n\t      x: matrix.e,\n\t      y: matrix.f\n\t    });\n\t    toPoint = parentMatrix.apply({\n\t      x: e,\n\t      y: f\n\t    });\n\t    x += toPoint.x - fromPoint.x;\n\t    y += toPoint.y - fromPoint.y;\n\t  } else {\n\t    parentMatrix.e = parentMatrix.f = 0;\n\t    toPoint = parentMatrix.apply({\n\t      x: e - fromState.matrix.e,\n\t      y: f - fromState.matrix.f\n\t    });\n\t    x += toPoint.x;\n\t    y += toPoint.y;\n\t  }\n\n\t  x = _closestTenth(x, 0.02);\n\t  y = _closestTenth(y, 0.02);\n\n\t  if (vars && !(vars instanceof ElementState)) {\n\t    element.style.cssText = cssText;\n\t    element.getBBox && element.setAttribute(\"transform\", transform || \"\");\n\t    cache.uncache = 1;\n\t  } else {\n\t    cache.x = x + \"px\";\n\t    cache.y = y + \"px\";\n\t    cache.renderTransform(1, cache);\n\t  }\n\n\t  if (vars) {\n\t    vars.x = x;\n\t    vars.y = y;\n\t    vars.rotation = rotation;\n\t    vars.skewX = skewX;\n\n\t    if (scale) {\n\t      vars.scaleX = scaleX;\n\t      vars.scaleY = scaleY;\n\t    } else {\n\t      vars.width = width;\n\t      vars.height = height;\n\t    }\n\t  }\n\n\t  return vars || cache;\n\t},\n\t    _parseState = function _parseState(targetsOrState, vars) {\n\t  return targetsOrState instanceof FlipState ? targetsOrState : new FlipState(targetsOrState, vars);\n\t},\n\t    _getChangingElState = function _getChangingElState(toState, fromState, id) {\n\t  var to1 = toState.idLookup[id],\n\t      to2 = toState.alt[id];\n\t  return to2.isVisible && (!(fromState.getElementState(to2.element) || to2).isVisible || !to1.isVisible) ? to2 : to1;\n\t},\n\t    _bodyMetrics = [],\n\t    _bodyProps = \"width,height,overflowX,overflowY\".split(\",\"),\n\t    _bodyLocked,\n\t    _lockBodyScroll = function _lockBodyScroll(lock) {\n\t  if (lock !== _bodyLocked) {\n\t    var s = _body$1.style,\n\t        w = _body$1.clientWidth === window.outerWidth,\n\t        h = _body$1.clientHeight === window.outerHeight,\n\t        i = 4;\n\n\t    if (lock && (w || h)) {\n\t      while (i--) {\n\t        _bodyMetrics[i] = s[_bodyProps[i]];\n\t      }\n\n\t      if (w) {\n\t        s.width = _body$1.clientWidth + \"px\";\n\t        s.overflowY = \"hidden\";\n\t      }\n\n\t      if (h) {\n\t        s.height = _body$1.clientHeight + \"px\";\n\t        s.overflowX = \"hidden\";\n\t      }\n\n\t      _bodyLocked = lock;\n\t    } else if (_bodyLocked) {\n\t      while (i--) {\n\t        _bodyMetrics[i] ? s[_bodyProps[i]] = _bodyMetrics[i] : s.removeProperty(_camelToDashed(_bodyProps[i]));\n\t      }\n\n\t      _bodyLocked = lock;\n\t    }\n\t  }\n\t},\n\t    _fromTo = function _fromTo(fromState, toState, vars, relative) {\n\t  fromState instanceof FlipState && toState instanceof FlipState || console.warn(\"Not a valid state object.\");\n\t  vars = vars || {};\n\n\t  var _vars = vars,\n\t      clearProps = _vars.clearProps,\n\t      onEnter = _vars.onEnter,\n\t      onLeave = _vars.onLeave,\n\t      absolute = _vars.absolute,\n\t      absoluteOnLeave = _vars.absoluteOnLeave,\n\t      custom = _vars.custom,\n\t      delay = _vars.delay,\n\t      paused = _vars.paused,\n\t      repeat = _vars.repeat,\n\t      repeatDelay = _vars.repeatDelay,\n\t      yoyo = _vars.yoyo,\n\t      toggleClass = _vars.toggleClass,\n\t      nested = _vars.nested,\n\t      _zIndex = _vars.zIndex,\n\t      scale = _vars.scale,\n\t      fade = _vars.fade,\n\t      stagger = _vars.stagger,\n\t      spin = _vars.spin,\n\t      prune = _vars.prune,\n\t      props = (\"props\" in vars ? vars : fromState).props,\n\t      tweenVars = _copy(vars, _reserved),\n\t      animation = gsap.timeline({\n\t    delay: delay,\n\t    paused: paused,\n\t    repeat: repeat,\n\t    repeatDelay: repeatDelay,\n\t    yoyo: yoyo,\n\t    data: \"isFlip\"\n\t  }),\n\t      remainingProps = tweenVars,\n\t      entering = [],\n\t      leaving = [],\n\t      comps = [],\n\t      swapOutTargets = [],\n\t      spinNum = spin === true ? 1 : spin || 0,\n\t      spinFunc = typeof spin === \"function\" ? spin : function () {\n\t    return spinNum;\n\t  },\n\t      interrupted = fromState.interrupted || toState.interrupted,\n\t      addFunc = animation[relative !== 1 ? \"to\" : \"from\"],\n\t      v,\n\t      p,\n\t      endTime,\n\t      i,\n\t      el,\n\t      comp,\n\t      state,\n\t      targets,\n\t      finalStates,\n\t      fromNode,\n\t      toNode,\n\t      run,\n\t      a,\n\t      b;\n\n\t  for (p in toState.idLookup) {\n\t    toNode = !toState.alt[p] ? toState.idLookup[p] : _getChangingElState(toState, fromState, p);\n\t    el = toNode.element;\n\t    fromNode = fromState.idLookup[p];\n\t    fromState.alt[p] && el === fromNode.element && (fromState.alt[p].isVisible || !toNode.isVisible) && (fromNode = fromState.alt[p]);\n\n\t    if (fromNode) {\n\t      comp = {\n\t        t: el,\n\t        b: fromNode,\n\t        a: toNode,\n\t        sd: fromNode.element === el ? 0 : toNode.isVisible ? 1 : -1\n\t      };\n\t      comps.push(comp);\n\n\t      if (comp.sd) {\n\t        if (comp.sd < 0) {\n\t          comp.b = toNode;\n\t          comp.a = fromNode;\n\t        }\n\n\t        interrupted && _recordInlineStyles(comp.b, props ? _memoizedRemoveProps[props] : _removeProps);\n\t        fade && comps.push(comp.swap = {\n\t          t: fromNode.element,\n\t          b: comp.b,\n\t          a: comp.a,\n\t          sd: -comp.sd,\n\t          swap: comp\n\t        });\n\t      }\n\n\t      el._flip = fromNode.element._flip = _batch ? _batch.timeline : animation;\n\t    } else if (toNode.isVisible) {\n\t      comps.push({\n\t        t: el,\n\t        b: _copy(toNode, {\n\t          isVisible: 1\n\t        }),\n\t        a: toNode,\n\t        sd: 0,\n\t        entering: 1\n\t      });\n\t      el._flip = _batch ? _batch.timeline : animation;\n\t    }\n\t  }\n\n\t  props && (_memoizedProps[props] || _memoizeProps(props)).forEach(function (p) {\n\t    return tweenVars[p] = function (i) {\n\t      return comps[i].a.props[p];\n\t    };\n\t  });\n\t  comps.finalStates = finalStates = [];\n\n\t  run = function run() {\n\t    _orderByDOMDepth(comps);\n\n\t    _lockBodyScroll(true);\n\n\t    for (i = 0; i < comps.length; i++) {\n\t      comp = comps[i];\n\t      a = comp.a;\n\t      b = comp.b;\n\n\t      if (prune && !a.isDifferent(b) && !comp.entering) {\n\t        comps.splice(i--, 1);\n\t      } else {\n\t        el = comp.t;\n\t        nested && !(comp.sd < 0) && i && (a.matrix = getGlobalMatrix(el, false, false, true));\n\n\t        if (b.isVisible && a.isVisible) {\n\t          if (comp.sd < 0) {\n\t            state = new ElementState(el, props, fromState.simple);\n\n\t            _fit(state, a, scale, 0, 0, state);\n\n\t            state.matrix = getGlobalMatrix(el, false, false, true);\n\t            state.css = comp.b.css;\n\t            comp.a = a = state;\n\t            fade && (el.style.opacity = interrupted ? b.opacity : a.opacity);\n\t            stagger && swapOutTargets.push(el);\n\t          } else if (comp.sd > 0 && fade) {\n\t            el.style.opacity = interrupted ? a.opacity - b.opacity : \"0\";\n\t          }\n\n\t          _fit(a, b, scale, props);\n\t        } else if (b.isVisible !== a.isVisible) {\n\t          if (!b.isVisible) {\n\t            a.isVisible && entering.push(a);\n\t            comps.splice(i--, 1);\n\t          } else if (!a.isVisible) {\n\t            b.css = a.css;\n\t            leaving.push(b);\n\t            comps.splice(i--, 1);\n\t            absolute && nested && _fit(a, b, scale, props);\n\t          }\n\t        }\n\n\t        if (!scale) {\n\t          el.style.maxWidth = Math.max(a.width, b.width) + \"px\";\n\t          el.style.maxHeight = Math.max(a.height, b.height) + \"px\";\n\t          el.style.minWidth = Math.min(a.width, b.width) + \"px\";\n\t          el.style.minHeight = Math.min(a.height, b.height) + \"px\";\n\t        }\n\n\t        nested && toggleClass && el.classList.add(toggleClass);\n\t      }\n\n\t      finalStates.push(a);\n\t    }\n\n\t    var classTargets;\n\n\t    if (toggleClass) {\n\t      classTargets = finalStates.map(function (s) {\n\t        return s.element;\n\t      });\n\t      nested && classTargets.forEach(function (e) {\n\t        return e.classList.remove(toggleClass);\n\t      });\n\t    }\n\n\t    _lockBodyScroll(false);\n\n\t    if (scale) {\n\t      tweenVars.scaleX = function (i) {\n\t        return comps[i].a.scaleX;\n\t      };\n\n\t      tweenVars.scaleY = function (i) {\n\t        return comps[i].a.scaleY;\n\t      };\n\t    } else {\n\t      tweenVars.width = function (i) {\n\t        return comps[i].a.width + \"px\";\n\t      };\n\n\t      tweenVars.height = function (i) {\n\t        return comps[i].a.height + \"px\";\n\t      };\n\n\t      tweenVars.autoRound = vars.autoRound || false;\n\t    }\n\n\t    tweenVars.x = function (i) {\n\t      return comps[i].a.x + \"px\";\n\t    };\n\n\t    tweenVars.y = function (i) {\n\t      return comps[i].a.y + \"px\";\n\t    };\n\n\t    tweenVars.rotation = function (i) {\n\t      return comps[i].a.rotation + (spin ? spinFunc(i, targets[i], targets) * 360 : 0);\n\t    };\n\n\t    tweenVars.skewX = function (i) {\n\t      return comps[i].a.skewX;\n\t    };\n\n\t    targets = comps.map(function (c) {\n\t      return c.t;\n\t    });\n\n\t    if (_zIndex || _zIndex === 0) {\n\t      tweenVars.modifiers = {\n\t        zIndex: function zIndex() {\n\t          return _zIndex;\n\t        }\n\t      };\n\t      tweenVars.zIndex = _zIndex;\n\t      tweenVars.immediateRender = vars.immediateRender !== false;\n\t    }\n\n\t    fade && (tweenVars.opacity = function (i) {\n\t      return comps[i].sd < 0 ? 0 : comps[i].sd > 0 ? comps[i].a.opacity : \"+=0\";\n\t    });\n\n\t    if (swapOutTargets.length) {\n\t      stagger = gsap.utils.distribute(stagger);\n\t      var dummyArray = targets.slice(swapOutTargets.length);\n\n\t      tweenVars.stagger = function (i, el) {\n\t        return stagger(~swapOutTargets.indexOf(el) ? targets.indexOf(comps[i].swap.t) : i, el, dummyArray);\n\t      };\n\t    }\n\n\t    _callbacks.forEach(function (name) {\n\t      return vars[name] && animation.eventCallback(name, vars[name], vars[name + \"Params\"]);\n\t    });\n\n\t    if (custom && targets.length) {\n\t      remainingProps = _copy(tweenVars, _reserved);\n\n\t      if (\"scale\" in custom) {\n\t        custom.scaleX = custom.scaleY = custom.scale;\n\t        delete custom.scale;\n\t      }\n\n\t      for (p in custom) {\n\t        v = _copy(custom[p], _fitReserved);\n\t        v[p] = tweenVars[p];\n\t        !(\"duration\" in v) && \"duration\" in tweenVars && (v.duration = tweenVars.duration);\n\t        v.stagger = tweenVars.stagger;\n\t        addFunc.call(animation, targets, v, 0);\n\t        delete remainingProps[p];\n\t      }\n\t    }\n\n\t    if (targets.length || leaving.length || entering.length) {\n\t      toggleClass && animation.add(function () {\n\t        return _toggleClass(classTargets, toggleClass, animation._zTime < 0 ? \"remove\" : \"add\");\n\t      }, 0) && !paused && _toggleClass(classTargets, toggleClass, \"add\");\n\t      targets.length && addFunc.call(animation, targets, remainingProps, 0);\n\t    }\n\n\t    _handleCallback(onEnter, entering, animation);\n\n\t    _handleCallback(onLeave, leaving, animation);\n\n\t    var batchTl = _batch && _batch.timeline;\n\n\t    if (batchTl) {\n\t      batchTl.add(animation, 0);\n\n\t      _batch._final.push(function () {\n\t        return _setFinalStates(comps, !clearProps);\n\t      });\n\t    }\n\n\t    endTime = animation.duration();\n\t    animation.call(function () {\n\t      var forward = animation.time() >= endTime;\n\t      forward && !batchTl && _setFinalStates(comps, !clearProps);\n\t      toggleClass && _toggleClass(classTargets, toggleClass, forward ? \"remove\" : \"add\");\n\t    });\n\t  };\n\n\t  absoluteOnLeave && (absolute = comps.filter(function (comp) {\n\t    return !comp.sd && !comp.a.isVisible && comp.b.isVisible;\n\t  }).map(function (comp) {\n\t    return comp.a.element;\n\t  }));\n\n\t  if (_batch) {\n\t    var _batch$_abs;\n\n\t    absolute && (_batch$_abs = _batch._abs).push.apply(_batch$_abs, _filterComps(comps, absolute));\n\n\t    _batch._run.push(run);\n\t  } else {\n\t    absolute && _makeCompsAbsolute(_filterComps(comps, absolute));\n\t    run();\n\t  }\n\n\t  var anim = _batch ? _batch.timeline : animation;\n\n\t  anim.revert = function () {\n\t    return _killFlip(anim, 1);\n\t  };\n\n\t  return anim;\n\t},\n\t    _interrupt = function _interrupt(tl) {\n\t  tl.vars.onInterrupt && tl.vars.onInterrupt.apply(tl, tl.vars.onInterruptParams || []);\n\t  tl.getChildren(true, false, true).forEach(_interrupt);\n\t},\n\t    _killFlip = function _killFlip(tl, action) {\n\t  if (tl && tl.progress() < 1 && !tl.paused()) {\n\t    if (action) {\n\t      _interrupt(tl);\n\n\t      action < 2 && tl.progress(1);\n\t      tl.kill();\n\t    }\n\n\t    return true;\n\t  }\n\t},\n\t    _createLookup = function _createLookup(state) {\n\t  var lookup = state.idLookup = {},\n\t      alt = state.alt = {},\n\t      elStates = state.elementStates,\n\t      i = elStates.length,\n\t      elState;\n\n\t  while (i--) {\n\t    elState = elStates[i];\n\t    lookup[elState.id] ? alt[elState.id] = elState : lookup[elState.id] = elState;\n\t  }\n\t};\n\n\tvar FlipState = function () {\n\t  function FlipState(targets, vars, targetsAreElementStates) {\n\t    this.props = vars && vars.props;\n\t    this.simple = !!(vars && vars.simple);\n\n\t    if (targetsAreElementStates) {\n\t      this.targets = _elementsFromElementStates(targets);\n\t      this.elementStates = targets;\n\n\t      _createLookup(this);\n\t    } else {\n\t      this.targets = _toArray(targets);\n\t      var soft = vars && (vars.kill === false || vars.batch && !vars.kill);\n\t      _batch && !soft && _batch._kill.push(this);\n\t      this.update(soft || !!_batch);\n\t    }\n\t  }\n\n\t  var _proto = FlipState.prototype;\n\n\t  _proto.update = function update(soft) {\n\t    var _this = this;\n\n\t    this.elementStates = this.targets.map(function (el) {\n\t      return new ElementState(el, _this.props, _this.simple);\n\t    });\n\n\t    _createLookup(this);\n\n\t    this.interrupt(soft);\n\t    this.recordInlineStyles();\n\t    return this;\n\t  };\n\n\t  _proto.clear = function clear() {\n\t    this.targets.length = this.elementStates.length = 0;\n\n\t    _createLookup(this);\n\n\t    return this;\n\t  };\n\n\t  _proto.fit = function fit(state, scale, nested) {\n\t    var elStatesInOrder = _orderByDOMDepth(this.elementStates.slice(0), false, true),\n\t        toElStates = (state || this).idLookup,\n\t        i = 0,\n\t        fromNode,\n\t        toNode;\n\n\t    for (; i < elStatesInOrder.length; i++) {\n\t      fromNode = elStatesInOrder[i];\n\t      nested && (fromNode.matrix = getGlobalMatrix(fromNode.element, false, false, true));\n\t      toNode = toElStates[fromNode.id];\n\t      toNode && _fit(fromNode, toNode, scale, true, 0, fromNode);\n\t      fromNode.matrix = getGlobalMatrix(fromNode.element, false, false, true);\n\t    }\n\n\t    return this;\n\t  };\n\n\t  _proto.getProperty = function getProperty(element, property) {\n\t    var es = this.getElementState(element) || _emptyObj;\n\n\t    return (property in es ? es : es.props || _emptyObj)[property];\n\t  };\n\n\t  _proto.add = function add(state) {\n\t    var i = state.targets.length,\n\t        lookup = this.idLookup,\n\t        alt = this.alt,\n\t        index,\n\t        es,\n\t        es2;\n\n\t    while (i--) {\n\t      es = state.elementStates[i];\n\t      es2 = lookup[es.id];\n\n\t      if (es2 && (es.element === es2.element || alt[es.id] && alt[es.id].element === es.element)) {\n\t        index = this.elementStates.indexOf(es.element === es2.element ? es2 : alt[es.id]);\n\t        this.targets.splice(index, 1, state.targets[i]);\n\t        this.elementStates.splice(index, 1, es);\n\t      } else {\n\t        this.targets.push(state.targets[i]);\n\t        this.elementStates.push(es);\n\t      }\n\t    }\n\n\t    state.interrupted && (this.interrupted = true);\n\t    state.simple || (this.simple = false);\n\n\t    _createLookup(this);\n\n\t    return this;\n\t  };\n\n\t  _proto.compare = function compare(state) {\n\t    var l1 = state.idLookup,\n\t        l2 = this.idLookup,\n\t        unchanged = [],\n\t        changed = [],\n\t        enter = [],\n\t        leave = [],\n\t        targets = [],\n\t        a1 = state.alt,\n\t        a2 = this.alt,\n\t        place = function place(s1, s2, el) {\n\t      return (s1.isVisible !== s2.isVisible ? s1.isVisible ? enter : leave : s1.isVisible ? changed : unchanged).push(el) && targets.push(el);\n\t    },\n\t        placeIfDoesNotExist = function placeIfDoesNotExist(s1, s2, el) {\n\t      return targets.indexOf(el) < 0 && place(s1, s2, el);\n\t    },\n\t        s1,\n\t        s2,\n\t        p,\n\t        el,\n\t        s1Alt,\n\t        s2Alt,\n\t        c1,\n\t        c2;\n\n\t    for (p in l1) {\n\t      s1Alt = a1[p];\n\t      s2Alt = a2[p];\n\t      s1 = !s1Alt ? l1[p] : _getChangingElState(state, this, p);\n\t      el = s1.element;\n\t      s2 = l2[p];\n\n\t      if (s2Alt) {\n\t        c2 = s2.isVisible || !s2Alt.isVisible && el === s2.element ? s2 : s2Alt;\n\t        c1 = s1Alt && !s1.isVisible && !s1Alt.isVisible && c2.element === s1Alt.element ? s1Alt : s1;\n\n\t        if (c1.isVisible && c2.isVisible && c1.element !== c2.element) {\n\t          (c1.isDifferent(c2) ? changed : unchanged).push(c1.element, c2.element);\n\t          targets.push(c1.element, c2.element);\n\t        } else {\n\t          place(c1, c2, c1.element);\n\t        }\n\n\t        s1Alt && c1.element === s1Alt.element && (s1Alt = l1[p]);\n\t        placeIfDoesNotExist(c1.element !== s2.element && s1Alt ? s1Alt : c1, s2, s2.element);\n\t        placeIfDoesNotExist(s1Alt && s1Alt.element === s2Alt.element ? s1Alt : c1, s2Alt, s2Alt.element);\n\t        s1Alt && placeIfDoesNotExist(s1Alt, s2Alt.element === s1Alt.element ? s2Alt : s2, s1Alt.element);\n\t      } else {\n\t        !s2 ? enter.push(el) : !s2.isDifferent(s1) ? unchanged.push(el) : place(s1, s2, el);\n\t        s1Alt && placeIfDoesNotExist(s1Alt, s2, s1Alt.element);\n\t      }\n\t    }\n\n\t    for (p in l2) {\n\t      if (!l1[p]) {\n\t        leave.push(l2[p].element);\n\t        a2[p] && leave.push(a2[p].element);\n\t      }\n\t    }\n\n\t    return {\n\t      changed: changed,\n\t      unchanged: unchanged,\n\t      enter: enter,\n\t      leave: leave\n\t    };\n\t  };\n\n\t  _proto.recordInlineStyles = function recordInlineStyles() {\n\t    var props = _memoizedRemoveProps[this.props] || _removeProps,\n\t        i = this.elementStates.length;\n\n\t    while (i--) {\n\t      _recordInlineStyles(this.elementStates[i], props);\n\t    }\n\t  };\n\n\t  _proto.interrupt = function interrupt(soft) {\n\t    var _this2 = this;\n\n\t    var timelines = [];\n\t    this.targets.forEach(function (t) {\n\t      var tl = t._flip,\n\t          foundInProgress = _killFlip(tl, soft ? 0 : 1);\n\n\t      soft && foundInProgress && timelines.indexOf(tl) < 0 && tl.add(function () {\n\t        return _this2.updateVisibility();\n\t      });\n\t      foundInProgress && timelines.push(tl);\n\t    });\n\t    !soft && timelines.length && this.updateVisibility();\n\t    this.interrupted || (this.interrupted = !!timelines.length);\n\t  };\n\n\t  _proto.updateVisibility = function updateVisibility() {\n\t    this.elementStates.forEach(function (es) {\n\t      var b = es.element.getBoundingClientRect();\n\t      es.isVisible = !!(b.width || b.height || b.top || b.left);\n\t      es.uncache = 1;\n\t    });\n\t  };\n\n\t  _proto.getElementState = function getElementState(element) {\n\t    return this.elementStates[this.targets.indexOf(_getEl(element))];\n\t  };\n\n\t  _proto.makeAbsolute = function makeAbsolute() {\n\t    return _orderByDOMDepth(this.elementStates.slice(0), true, true).map(_makeAbsolute);\n\t  };\n\n\t  return FlipState;\n\t}();\n\n\tvar ElementState = function () {\n\t  function ElementState(element, props, simple) {\n\t    this.element = element;\n\t    this.update(props, simple);\n\t  }\n\n\t  var _proto2 = ElementState.prototype;\n\n\t  _proto2.isDifferent = function isDifferent(state) {\n\t    var b1 = this.bounds,\n\t        b2 = state.bounds;\n\t    return b1.top !== b2.top || b1.left !== b2.left || b1.width !== b2.width || b1.height !== b2.height || !this.matrix.equals(state.matrix) || this.opacity !== state.opacity || this.props && state.props && JSON.stringify(this.props) !== JSON.stringify(state.props);\n\t  };\n\n\t  _proto2.update = function update(props, simple) {\n\t    var self = this,\n\t        element = self.element,\n\t        getProp = gsap.getProperty(element),\n\t        cache = gsap.core.getCache(element),\n\t        bounds = element.getBoundingClientRect(),\n\t        bbox = element.getBBox && typeof element.getBBox === \"function\" && element.nodeName.toLowerCase() !== \"svg\" && element.getBBox(),\n\t        m = simple ? new Matrix2D(1, 0, 0, 1, bounds.left + _getDocScrollLeft(), bounds.top + _getDocScrollTop()) : getGlobalMatrix(element, false, false, true);\n\t    self.getProp = getProp;\n\t    self.element = element;\n\t    self.id = _getID(element);\n\t    self.matrix = m;\n\t    self.cache = cache;\n\t    self.bounds = bounds;\n\t    self.isVisible = !!(bounds.width || bounds.height || bounds.left || bounds.top);\n\t    self.display = getProp(\"display\");\n\t    self.position = getProp(\"position\");\n\t    self.parent = element.parentNode;\n\t    self.x = getProp(\"x\");\n\t    self.y = getProp(\"y\");\n\t    self.scaleX = cache.scaleX;\n\t    self.scaleY = cache.scaleY;\n\t    self.rotation = getProp(\"rotation\");\n\t    self.skewX = getProp(\"skewX\");\n\t    self.opacity = getProp(\"opacity\");\n\t    self.width = bbox ? bbox.width : _closestTenth(getProp(\"width\", \"px\"), 0.04);\n\t    self.height = bbox ? bbox.height : _closestTenth(getProp(\"height\", \"px\"), 0.04);\n\t    props && _recordProps(self, _memoizedProps[props] || _memoizeProps(props));\n\t    self.ctm = element.getCTM && element.nodeName.toLowerCase() === \"svg\" && _getCTM(element).inverse();\n\t    self.simple = simple || _round(m.a) === 1 && !_round(m.b) && !_round(m.c) && _round(m.d) === 1;\n\t    self.uncache = 0;\n\t  };\n\n\t  return ElementState;\n\t}();\n\n\tvar FlipAction = function () {\n\t  function FlipAction(vars, batch) {\n\t    this.vars = vars;\n\t    this.batch = batch;\n\t    this.states = [];\n\t    this.timeline = batch.timeline;\n\t  }\n\n\t  var _proto3 = FlipAction.prototype;\n\n\t  _proto3.getStateById = function getStateById(id) {\n\t    var i = this.states.length;\n\n\t    while (i--) {\n\t      if (this.states[i].idLookup[id]) {\n\t        return this.states[i];\n\t      }\n\t    }\n\t  };\n\n\t  _proto3.kill = function kill() {\n\t    this.batch.remove(this);\n\t  };\n\n\t  return FlipAction;\n\t}();\n\n\tvar FlipBatch = function () {\n\t  function FlipBatch(id) {\n\t    this.id = id;\n\t    this.actions = [];\n\t    this._kill = [];\n\t    this._final = [];\n\t    this._abs = [];\n\t    this._run = [];\n\t    this.data = {};\n\t    this.state = new FlipState();\n\t    this.timeline = gsap.timeline();\n\t  }\n\n\t  var _proto4 = FlipBatch.prototype;\n\n\t  _proto4.add = function add(config) {\n\t    var result = this.actions.filter(function (action) {\n\t      return action.vars === config;\n\t    });\n\n\t    if (result.length) {\n\t      return result[0];\n\t    }\n\n\t    result = new FlipAction(typeof config === \"function\" ? {\n\t      animate: config\n\t    } : config, this);\n\t    this.actions.push(result);\n\t    return result;\n\t  };\n\n\t  _proto4.remove = function remove(action) {\n\t    var i = this.actions.indexOf(action);\n\t    i >= 0 && this.actions.splice(i, 1);\n\t    return this;\n\t  };\n\n\t  _proto4.getState = function getState(merge) {\n\t    var _this3 = this;\n\n\t    var prevBatch = _batch,\n\t        prevAction = _batchAction;\n\t    _batch = this;\n\t    this.state.clear();\n\t    this._kill.length = 0;\n\t    this.actions.forEach(function (action) {\n\t      if (action.vars.getState) {\n\t        action.states.length = 0;\n\t        _batchAction = action;\n\t        action.state = action.vars.getState(action);\n\t      }\n\n\t      merge && action.states.forEach(function (s) {\n\t        return _this3.state.add(s);\n\t      });\n\t    });\n\t    _batchAction = prevAction;\n\t    _batch = prevBatch;\n\t    this.killConflicts();\n\t    return this;\n\t  };\n\n\t  _proto4.animate = function animate() {\n\t    var _this4 = this;\n\n\t    var prevBatch = _batch,\n\t        tl = this.timeline,\n\t        i = this.actions.length,\n\t        finalStates,\n\t        endTime;\n\t    _batch = this;\n\t    tl.clear();\n\t    this._abs.length = this._final.length = this._run.length = 0;\n\t    this.actions.forEach(function (a) {\n\t      a.vars.animate && a.vars.animate(a);\n\t      var onEnter = a.vars.onEnter,\n\t          onLeave = a.vars.onLeave,\n\t          targets = a.targets,\n\t          s,\n\t          result;\n\n\t      if (targets && targets.length && (onEnter || onLeave)) {\n\t        s = new FlipState();\n\t        a.states.forEach(function (state) {\n\t          return s.add(state);\n\t        });\n\t        result = s.compare(Flip.getState(targets));\n\t        result.enter.length && onEnter && onEnter(result.enter);\n\t        result.leave.length && onLeave && onLeave(result.leave);\n\t      }\n\t    });\n\n\t    _makeCompsAbsolute(this._abs);\n\n\t    this._run.forEach(function (f) {\n\t      return f();\n\t    });\n\n\t    endTime = tl.duration();\n\t    finalStates = this._final.slice(0);\n\t    tl.add(function () {\n\t      if (endTime <= tl.time()) {\n\t        finalStates.forEach(function (f) {\n\t          return f();\n\t        });\n\n\t        _forEachBatch(_this4, \"onComplete\");\n\t      }\n\t    });\n\t    _batch = prevBatch;\n\n\t    while (i--) {\n\t      this.actions[i].vars.once && this.actions[i].kill();\n\t    }\n\n\t    _forEachBatch(this, \"onStart\");\n\n\t    tl.restart();\n\t    return this;\n\t  };\n\n\t  _proto4.loadState = function loadState(done) {\n\t    done || (done = function done() {\n\t      return 0;\n\t    });\n\t    var queue = [];\n\t    this.actions.forEach(function (c) {\n\t      if (c.vars.loadState) {\n\t        var i,\n\t            f = function f(targets) {\n\t          targets && (c.targets = targets);\n\t          i = queue.indexOf(f);\n\n\t          if (~i) {\n\t            queue.splice(i, 1);\n\t            queue.length || done();\n\t          }\n\t        };\n\n\t        queue.push(f);\n\t        c.vars.loadState(f);\n\t      }\n\t    });\n\t    queue.length || done();\n\t    return this;\n\t  };\n\n\t  _proto4.setState = function setState() {\n\t    this.actions.forEach(function (c) {\n\t      return c.targets = c.vars.setState && c.vars.setState(c);\n\t    });\n\t    return this;\n\t  };\n\n\t  _proto4.killConflicts = function killConflicts(soft) {\n\t    this.state.interrupt(soft);\n\n\t    this._kill.forEach(function (state) {\n\t      return state.interrupt(soft);\n\t    });\n\n\t    return this;\n\t  };\n\n\t  _proto4.run = function run(skipGetState, merge) {\n\t    var _this5 = this;\n\n\t    if (this !== _batch) {\n\t      skipGetState || this.getState(merge);\n\t      this.loadState(function () {\n\t        if (!_this5._killed) {\n\t          _this5.setState();\n\n\t          _this5.animate();\n\t        }\n\t      });\n\t    }\n\n\t    return this;\n\t  };\n\n\t  _proto4.clear = function clear(stateOnly) {\n\t    this.state.clear();\n\t    stateOnly || (this.actions.length = 0);\n\t  };\n\n\t  _proto4.getStateById = function getStateById(id) {\n\t    var i = this.actions.length,\n\t        s;\n\n\t    while (i--) {\n\t      s = this.actions[i].getStateById(id);\n\n\t      if (s) {\n\t        return s;\n\t      }\n\t    }\n\n\t    return this.state.idLookup[id] && this.state;\n\t  };\n\n\t  _proto4.kill = function kill() {\n\t    this._killed = 1;\n\t    this.clear();\n\t    delete _batchLookup[this.id];\n\t  };\n\n\t  return FlipBatch;\n\t}();\n\n\tvar Flip = function () {\n\t  function Flip() {}\n\n\t  Flip.getState = function getState(targets, vars) {\n\t    var state = _parseState(targets, vars);\n\n\t    _batchAction && _batchAction.states.push(state);\n\t    vars && vars.batch && Flip.batch(vars.batch).state.add(state);\n\t    return state;\n\t  };\n\n\t  Flip.from = function from(state, vars) {\n\t    vars = vars || {};\n\t    \"clearProps\" in vars || (vars.clearProps = true);\n\t    return _fromTo(state, _parseState(vars.targets || state.targets, {\n\t      props: vars.props || state.props,\n\t      simple: vars.simple,\n\t      kill: !!vars.kill\n\t    }), vars, -1);\n\t  };\n\n\t  Flip.to = function to(state, vars) {\n\t    return _fromTo(state, _parseState(vars.targets || state.targets, {\n\t      props: vars.props || state.props,\n\t      simple: vars.simple,\n\t      kill: !!vars.kill\n\t    }), vars, 1);\n\t  };\n\n\t  Flip.fromTo = function fromTo(fromState, toState, vars) {\n\t    return _fromTo(fromState, toState, vars);\n\t  };\n\n\t  Flip.fit = function fit(fromEl, toEl, vars) {\n\t    var v = vars ? _copy(vars, _fitReserved) : {},\n\t        _ref = vars || v,\n\t        absolute = _ref.absolute,\n\t        scale = _ref.scale,\n\t        getVars = _ref.getVars,\n\t        props = _ref.props,\n\t        runBackwards = _ref.runBackwards,\n\t        onComplete = _ref.onComplete,\n\t        simple = _ref.simple,\n\t        fitChild = vars && vars.fitChild && _getEl(vars.fitChild),\n\t        before = _parseElementState(toEl, props, simple, fromEl),\n\t        after = _parseElementState(fromEl, 0, simple, before),\n\t        inlineProps = props ? _memoizedRemoveProps[props] : _removeProps;\n\n\t    props && _applyProps(v, before.props);\n\n\t    if (runBackwards) {\n\t      _recordInlineStyles(after, inlineProps);\n\n\t      \"immediateRender\" in v || (v.immediateRender = true);\n\n\t      v.onComplete = function () {\n\t        _applyInlineStyles(after);\n\n\t        onComplete && onComplete.apply(this, arguments);\n\t      };\n\t    }\n\n\t    absolute && _makeAbsolute(after, before);\n\t    v = _fit(after, before, scale || fitChild, props, fitChild, v.duration || getVars ? v : 0);\n\t    return getVars ? v : v.duration ? gsap.to(after.element, v) : null;\n\t  };\n\n\t  Flip.makeAbsolute = function makeAbsolute(targetsOrStates, vars) {\n\t    return (targetsOrStates instanceof FlipState ? targetsOrStates : new FlipState(targetsOrStates, vars)).makeAbsolute();\n\t  };\n\n\t  Flip.batch = function batch(id) {\n\t    id || (id = \"default\");\n\t    return _batchLookup[id] || (_batchLookup[id] = new FlipBatch(id));\n\t  };\n\n\t  Flip.killFlipsOf = function killFlipsOf(targets, complete) {\n\t    (targets instanceof FlipState ? targets.targets : _toArray(targets)).forEach(function (t) {\n\t      return t && _killFlip(t._flip, complete !== false ? 1 : 2);\n\t    });\n\t  };\n\n\t  Flip.isFlipping = function isFlipping(target) {\n\t    var f = Flip.getByTarget(target);\n\t    return !!f && f.isActive();\n\t  };\n\n\t  Flip.getByTarget = function getByTarget(target) {\n\t    return (_getEl(target) || _emptyObj)._flip;\n\t  };\n\n\t  Flip.getElementState = function getElementState(target, props) {\n\t    return new ElementState(_getEl(target), props);\n\t  };\n\n\t  Flip.convertCoordinates = function convertCoordinates(fromElement, toElement, point) {\n\t    var m = getGlobalMatrix(toElement, true, true).multiply(getGlobalMatrix(fromElement));\n\t    return point ? m.apply(point) : m;\n\t  };\n\n\t  Flip.register = function register(core) {\n\t    _body$1 = typeof document !== \"undefined\" && document.body;\n\n\t    if (_body$1) {\n\t      gsap = core;\n\n\t      _setDoc(_body$1);\n\n\t      _toArray = gsap.utils.toArray;\n\t      var snap = gsap.utils.snap(0.1);\n\n\t      _closestTenth = function _closestTenth(value, add) {\n\t        return snap(parseFloat(value) + add);\n\t      };\n\t    }\n\t  };\n\n\t  return Flip;\n\t}();\n\tFlip.version = \"3.11.3\";\n\ttypeof window !== \"undefined\" && window.gsap && window.gsap.registerPlugin(Flip);\n\n\texports.Flip = Flip;\n\texports.default = Flip;\n\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/gsap/dist/Flip.js\n"));

/***/ }),

/***/ "./pages/story.js":
/*!************************!*\
  !*** ./pages/story.js ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Index; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _src_components_layout__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../src/components/layout */ \"./src/components/layout/index.js\");\n/* harmony import */ var gsap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! gsap */ \"./node_modules/gsap/index.js\");\n/* harmony import */ var gsap_dist_Flip__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! gsap/dist/Flip */ \"./node_modules/gsap/dist/Flip.js\");\n/* harmony import */ var gsap_dist_Flip__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(gsap_dist_Flip__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _src_styles_story_module_scss__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../src/styles/story.module.scss */ \"./src/styles/story.module.scss\");\n/* harmony import */ var _src_styles_story_module_scss__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_src_styles_story_module_scss__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/link */ \"./node_modules/next/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_3__);\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\nfunction Index() {\n    _s();\n    //console.log(logo);\n    gsap__WEBPACK_IMPORTED_MODULE_4__.gsap.registerPlugin(gsap_dist_Flip__WEBPACK_IMPORTED_MODULE_5__.Flip);\n    var flipSection = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function() {\n        var animateCard = function animateCard(el) {\n            var cardImage = el.querySelector(\"img\");\n            var state = gsap_dist_Flip__WEBPACK_IMPORTED_MODULE_5__.Flip.getState(cards);\n            var imageState = gsap_dist_Flip__WEBPACK_IMPORTED_MODULE_5__.Flip.getState(cardImage);\n            el.classList.toggle(\"active\");\n            gsap_dist_Flip__WEBPACK_IMPORTED_MODULE_5__.Flip.from(state, {\n                ease: \"power1.inOut\",\n                absolute: true\n            });\n            gsap_dist_Flip__WEBPACK_IMPORTED_MODULE_5__.Flip.from(imageState, {\n                ease: \"power1.inOut\",\n                duration: 0.4,\n                delay: 0.1\n            });\n        };\n        var section = flipSection.current;\n        var cards = section.querySelectorAll(\".flip-box\");\n        //console.log(sections);\n        // Animation\n        cards.forEach(function(el) {\n            el.addEventListener(\"mouseenter\", function() {\n                return animateCard(el);\n            });\n            el.addEventListener(\"mouseleave\", function() {\n                return animateCard(el);\n            });\n        });\n    }, []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_src_components_layout__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n        header: \"show\",\n        footer: \"hide\",\n        mainDir: \"ltr\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"section\", {\n            className: \"vertical-wrapper h-screen flex flex-nowrap flex-row-reverse \".concat((_src_styles_story_module_scss__WEBPACK_IMPORTED_MODULE_6___default().container)),\n            id: \"vertical-scroll\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    ref: flipSection,\n                    className: \"v-section h-full w-screen flex content-center overflow-hidden justify-center \".concat((_src_styles_story_module_scss__WEBPACK_IMPORTED_MODULE_6___default().color1), \" \").concat((_src_styles_story_module_scss__WEBPACK_IMPORTED_MODULE_6___default().section)),\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flip-box\"\n                    }, void 0, false, {\n                        fileName: \"/Users/shiplorahman/Projects/bamistarim/pages/story.js\",\n                        lineNumber: 48,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/Users/shiplorahman/Projects/bamistarim/pages/story.js\",\n                    lineNumber: 47,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                    children: \"Story One\"\n                }, void 0, false, {\n                    fileName: \"/Users/shiplorahman/Projects/bamistarim/pages/story.js\",\n                    lineNumber: 52,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_3___default()), {\n                    href: \"/\",\n                    children: \"Home Page\"\n                }, void 0, false, {\n                    fileName: \"/Users/shiplorahman/Projects/bamistarim/pages/story.js\",\n                    lineNumber: 53,\n                    columnNumber: 9\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/shiplorahman/Projects/bamistarim/pages/story.js\",\n            lineNumber: 46,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/shiplorahman/Projects/bamistarim/pages/story.js\",\n        lineNumber: 45,\n        columnNumber: 5\n    }, this);\n}\n_s(Index, \"cAXO3QwJhD6OklUln3BBYczKTpk=\");\n_c = Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9zdG9yeS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQXlDO0FBQ0k7QUFDbEI7QUFDVTtBQUNlO0FBQ3hCO0FBR2IsU0FBU08sS0FBSyxHQUFHOztJQUM5QixvQkFBb0I7SUFFcEJKLHFEQUFtQixDQUFDQyxnREFBSSxDQUFDLENBQUM7SUFFMUIsSUFBSUssV0FBVyxHQUFHUiw2Q0FBTSxDQUFDLElBQUksQ0FBQztJQUU5QkQsZ0RBQVMsQ0FBQyxXQUFNO1lBV0xVLFdBQVcsR0FBcEIsU0FBU0EsV0FBVyxDQUFDQyxFQUFFLEVBQUU7WUFDdkIsSUFBTUMsU0FBUyxHQUFHRCxFQUFFLENBQUNFLGFBQWEsQ0FBQyxLQUFLLENBQUM7WUFDekMsSUFBTUMsS0FBSyxHQUFHVix5REFBYSxDQUFDWSxLQUFLLENBQUM7WUFDbEMsSUFBTUMsVUFBVSxHQUFHYix5REFBYSxDQUFDUSxTQUFTLENBQUM7WUFDM0NELEVBQUUsQ0FBQ08sU0FBUyxDQUFDQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDOUJmLHFEQUFTLENBQUNVLEtBQUssRUFBRTtnQkFDZk8sSUFBSSxFQUFFLGNBQWM7Z0JBQ3BCQyxRQUFRLEVBQUUsSUFBSTthQUNmLENBQUMsQ0FBQztZQUNIbEIscURBQVMsQ0FBQ2EsVUFBVSxFQUFFO2dCQUNwQkksSUFBSSxFQUFFLGNBQWM7Z0JBQ3BCRSxRQUFRLEVBQUUsR0FBRztnQkFDYkMsS0FBSyxFQUFFLEdBQUc7YUFDWCxDQUFDLENBQUM7UUFDTCxDQUFDO1FBeEJELElBQU1DLE9BQU8sR0FBR2hCLFdBQVcsQ0FBQ2lCLE9BQU87UUFDbkMsSUFBSVYsS0FBSyxHQUFHUyxPQUFPLENBQUNFLGdCQUFnQixDQUFDLFdBQVcsQ0FBQztRQUNqRCx3QkFBd0I7UUFDeEIsWUFBWTtRQUVaWCxLQUFLLENBQUNZLE9BQU8sQ0FBQyxTQUFDakIsRUFBRSxFQUFLO1lBQ3BCQSxFQUFFLENBQUNrQixnQkFBZ0IsQ0FBQyxZQUFZLEVBQUU7dUJBQU1uQixXQUFXLENBQUNDLEVBQUUsQ0FBQzthQUFBLENBQUMsQ0FBQztZQUN6REEsRUFBRSxDQUFDa0IsZ0JBQWdCLENBQUMsWUFBWSxFQUFFO3VCQUFNbkIsV0FBVyxDQUFDQyxFQUFFLENBQUM7YUFBQSxDQUFDLENBQUM7UUFDM0QsQ0FBQyxDQUFDLENBQUM7SUFpQkwsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBRVAscUJBQ0UsOERBQUNULDhEQUFNO1FBQUM0QixNQUFNLEVBQUMsTUFBTTtRQUFDQyxNQUFNLEVBQUMsTUFBTTtRQUFDQyxPQUFPLEVBQUMsS0FBSztrQkFDL0MsNEVBQUNQLFNBQU87WUFBQ1EsU0FBUyxFQUFFLDhEQUE2RCxDQUFtQixPQUFqQjVCLGdGQUFnQixDQUFFO1lBQUU4QixFQUFFLEVBQUMsaUJBQWlCOzs4QkFDekgsOERBQUNDLEtBQUc7b0JBQUNDLEdBQUcsRUFBRTVCLFdBQVc7b0JBQUV3QixTQUFTLEVBQUUsK0VBQThFLENBQW1CNUIsTUFBYyxDQUEvQkEsNkVBQWEsRUFBQyxHQUFDLENBQWlCLFFBQWZBLDhFQUFjLENBQUU7OEJBQ2pKLDRFQUFDK0IsS0FBRzt3QkFBQ0gsU0FBUyxFQUFDLFVBQVU7Ozs7OzRCQUVuQjs7Ozs7d0JBQ0Y7OEJBQ04sOERBQUNNLElBQUU7OEJBQUMsV0FBUzs7Ozs7d0JBQUs7OEJBQ2xCLDhEQUFDakMsa0RBQUk7b0JBQUNrQyxJQUFJLEVBQUUsR0FBRzs4QkFBRSxXQUFTOzs7Ozt3QkFBTzs7Ozs7O2dCQUN6Qjs7Ozs7WUFDSCxDQUNWO0FBQ0gsQ0FBQztHQWhEdUJqQyxLQUFLO0FBQUxBLEtBQUFBLEtBQUsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vcGFnZXMvc3RvcnkuanM/NDA2MyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VFZmZlY3QsIHVzZVJlZiB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IExheW91dCBmcm9tICcuLi9zcmMvY29tcG9uZW50cy9sYXlvdXQnXG5pbXBvcnQgeyBnc2FwIH0gZnJvbSAnZ3NhcCdcbmltcG9ydCB7IEZsaXAgfSBmcm9tICdnc2FwL2Rpc3QvRmxpcCdcbmltcG9ydCBzdHlsZXMgZnJvbSAnLi4vc3JjL3N0eWxlcy9zdG9yeS5tb2R1bGUuc2NzcydcbmltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluaydcblxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBJbmRleCgpIHtcbiAgLy9jb25zb2xlLmxvZyhsb2dvKTtcblxuICBnc2FwLnJlZ2lzdGVyUGx1Z2luKEZsaXApO1xuXG4gIGxldCBmbGlwU2VjdGlvbiA9IHVzZVJlZihudWxsKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IHNlY3Rpb24gPSBmbGlwU2VjdGlvbi5jdXJyZW50O1xuICAgIGxldCBjYXJkcyA9IHNlY3Rpb24ucXVlcnlTZWxlY3RvckFsbCgnLmZsaXAtYm94Jyk7XG4gICAgLy9jb25zb2xlLmxvZyhzZWN0aW9ucyk7XG4gICAgLy8gQW5pbWF0aW9uXG5cbiAgICBjYXJkcy5mb3JFYWNoKChlbCkgPT4ge1xuICAgICAgZWwuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlZW50ZXJcIiwgKCkgPT4gYW5pbWF0ZUNhcmQoZWwpKTtcbiAgICAgIGVsLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWxlYXZlXCIsICgpID0+IGFuaW1hdGVDYXJkKGVsKSk7XG4gICAgfSk7XG5cbiAgICBmdW5jdGlvbiBhbmltYXRlQ2FyZChlbCkge1xuICAgICAgY29uc3QgY2FyZEltYWdlID0gZWwucXVlcnlTZWxlY3RvcihcImltZ1wiKTtcbiAgICAgIGNvbnN0IHN0YXRlID0gRmxpcC5nZXRTdGF0ZShjYXJkcyk7XG4gICAgICBjb25zdCBpbWFnZVN0YXRlID0gRmxpcC5nZXRTdGF0ZShjYXJkSW1hZ2UpO1xuICAgICAgZWwuY2xhc3NMaXN0LnRvZ2dsZShcImFjdGl2ZVwiKTtcbiAgICAgIEZsaXAuZnJvbShzdGF0ZSwge1xuICAgICAgICBlYXNlOiBcInBvd2VyMS5pbk91dFwiLFxuICAgICAgICBhYnNvbHV0ZTogdHJ1ZVxuICAgICAgfSk7XG4gICAgICBGbGlwLmZyb20oaW1hZ2VTdGF0ZSwge1xuICAgICAgICBlYXNlOiBcInBvd2VyMS5pbk91dFwiLFxuICAgICAgICBkdXJhdGlvbjogMC40LFxuICAgICAgICBkZWxheTogMC4xXG4gICAgICB9KTtcbiAgICB9XG4gIH0sIFtdKTtcblxuICByZXR1cm4gKFxuICAgIDxMYXlvdXQgaGVhZGVyPSdzaG93JyBmb290ZXI9J2hpZGUnIG1haW5EaXI9J2x0cic+XG4gICAgICA8c2VjdGlvbiBjbGFzc05hbWU9e2B2ZXJ0aWNhbC13cmFwcGVyIGgtc2NyZWVuIGZsZXggZmxleC1ub3dyYXAgZmxleC1yb3ctcmV2ZXJzZSAke3N0eWxlcy5jb250YWluZXJ9YH0gaWQ9J3ZlcnRpY2FsLXNjcm9sbCc+XG4gICAgICAgIDxkaXYgcmVmPXtmbGlwU2VjdGlvbn0gY2xhc3NOYW1lPXtgdi1zZWN0aW9uIGgtZnVsbCB3LXNjcmVlbiBmbGV4IGNvbnRlbnQtY2VudGVyIG92ZXJmbG93LWhpZGRlbiBqdXN0aWZ5LWNlbnRlciAke3N0eWxlcy5jb2xvcjF9ICR7c3R5bGVzLnNlY3Rpb259YH0+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2ZsaXAtYm94Jz5cblxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGgyPlN0b3J5IE9uZTwvaDI+XG4gICAgICAgIDxMaW5rIGhyZWY9eycvJ30+SG9tZSBQYWdlPC9MaW5rPlxuICAgICAgPC9zZWN0aW9uPlxuICAgIDwvTGF5b3V0PlxuICApXG59XG4iXSwibmFtZXMiOlsidXNlRWZmZWN0IiwidXNlUmVmIiwiTGF5b3V0IiwiZ3NhcCIsIkZsaXAiLCJzdHlsZXMiLCJMaW5rIiwiSW5kZXgiLCJyZWdpc3RlclBsdWdpbiIsImZsaXBTZWN0aW9uIiwiYW5pbWF0ZUNhcmQiLCJlbCIsImNhcmRJbWFnZSIsInF1ZXJ5U2VsZWN0b3IiLCJzdGF0ZSIsImdldFN0YXRlIiwiY2FyZHMiLCJpbWFnZVN0YXRlIiwiY2xhc3NMaXN0IiwidG9nZ2xlIiwiZnJvbSIsImVhc2UiLCJhYnNvbHV0ZSIsImR1cmF0aW9uIiwiZGVsYXkiLCJzZWN0aW9uIiwiY3VycmVudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIiwiYWRkRXZlbnRMaXN0ZW5lciIsImhlYWRlciIsImZvb3RlciIsIm1haW5EaXIiLCJjbGFzc05hbWUiLCJjb250YWluZXIiLCJpZCIsImRpdiIsInJlZiIsImNvbG9yMSIsImgyIiwiaHJlZiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/story.js\n"));

/***/ })

});